<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<p><a href="algorithms.htm">Algorithms</a></p>

<h2>check_digits</h2>
<p>Returns true if all digits are compatible with de base.</p>

<p>0 &lt;= digit &lt;= base - 1</p>

<h3> Implementation</h3>

<pre>
<span class="keyword">template</span>&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base, <span class="keyword">class</span> It&gt;
<span class="keyword">bool</span> check_digits(It first, It last)
{
    <span class="keyword">static_assert</span>(base &gt; <span class="number">1</span>, <span class="string">&quot;base must be &gt; 1&quot;</span>);
    <span class="keyword">for</span> (; first != last; first++)
    {
        <span class="keyword">if</span> (*first &lt; <span class="number">0</span> || *first &gt;= base)
          <span class="keyword">return</span> <span class="keyword">false</span>;
    }
    <span class="keyword">return</span> <span class="keyword">true</span>;
}

</pre>


<p>(Used in debug)</p>
<h3> Sample</h3>

<pre>

<span class="keyword">void</span> check_digits_test()
{
  <span class="keyword">using</span> <span class="keyword">namespace</span> std;
  <span class="keyword">int</span> a[] = {<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};  
  assert(check_digits&lt;<span class="number">10</span>&gt;(begin(a), end(a)) == <span class="keyword">true</span>);
  assert(check_digits&lt;<span class="number">256</span>&gt;(begin(a), end(a)) == <span class="keyword">true</span>);
  
  <span class="keyword">int</span> b[] = {<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">255</span>};  
  assert(check_digits&lt;<span class="number">10</span>&gt;(begin(b), end(b)) == <span class="keyword">false</span>);
  assert(check_digits&lt;<span class="number">256</span>&gt;(begin(b), end(b)) == <span class="keyword">true</span>);
}

</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  