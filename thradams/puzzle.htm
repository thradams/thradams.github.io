<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->
<h2>River Crossing Puzzle</h2>

<ul>
<li> A father and his two sons, a mother and her two daughters, a thief and a policeman are on one side of a river. </li>
<li> There is a boat by the river bank, but it can only take two people at a time. </li>
<li> Only the father, the mother and the policeman know how to operate the boat. </li>
<li>The father can not be with any of the girls without their mother around. </li>
<li> The mother can not be with any of the boys without their father around. </li>
<li> The thief can not be with anyone else without the policeman around. How can you get everyone across to the other side of the river?</li>
</ul>

<p><a href="play the game here">http://www.smallcampus.net/upload/html/maths_games/2001-05-03/riverIQGame.swf</a></p>

<p><img src="figs/river.jpg"></p>

<p>Solution using C++ :)</p>

<pre>

<span class="keyword">#include</span> &lt;iostream&gt;
<span class="keyword">#include</span> &lt;iomanip&gt;

<span class="keyword">using</span> <span class="keyword">namespace</span> std;


<span class="keyword">int</span> travels = <span class="number">18</span>;
<span class="keyword">int</span> solution = <span class="number">0</span>;
<span class="keyword">int</span> solution_counter = <span class="number">0</span>;

<span class="keyword">enum</span> People
{
    None      = <span class="number">0</span>,
    Father    = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,
    Mother    = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,
    Son1      = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,
    Son2      = <span class="number">1</span> &lt;&lt; <span class="number">3</span>,
    Daughter1 = <span class="number">1</span> &lt;&lt; <span class="number">4</span>,
    Daughter2 = <span class="number">1</span> &lt;&lt; <span class="number">5</span>,
    Policeman = <span class="number">1</span> &lt;&lt; <span class="number">6</span>,
    Thief     = <span class="number">1</span> &lt;&lt; <span class="number">7</span>
};


<span class="keyword">inline</span> People <span class="keyword">operator</span> | (<span class="keyword">const</span> People &amp; a, People b) {
    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;People&gt;( <span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(a) |
        <span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(b));
}

<span class="keyword">inline</span> People <span class="keyword">operator</span>~ (People X) {
    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;People&gt;(~<span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(X));
}

<span class="keyword">inline</span> People <span class="keyword">operator</span>&amp; (People X, People Y) {
    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;People&gt;(<span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(X) &amp;
        <span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(Y));
}

<span class="keyword">inline</span> People&amp; <span class="keyword">operator</span>&amp;=(People&amp; X, People Y) {
    X = (People) (X &amp; Y);
    <span class="keyword">return</span> X;
}


std::ostream&amp; <span class="keyword">operator</span> &lt;&lt; (std::ostream &amp;os, People e2)
{
    <span class="keyword">if</span> (e2 == None)
        std::cout &lt;&lt; <span class="string">&quot;None&quot;</span>;
    <span class="keyword">else</span>
    {
        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> * days[] = {<span class="string">&quot;Father&quot;</span>, <span class="string">&quot;Mother&quot;</span>, <span class="string">&quot;Son1&quot;</span>, <span class="string">&quot;Son2&quot;</span>,
            <span class="string">&quot;Daughter1&quot;</span>, <span class="string">&quot;Daughter2&quot;</span>,  <span class="string">&quot;Policeman&quot;</span> , <span class="string">&quot;Thief&quot;</span>};
        <span class="keyword">bool</span> bFirst = <span class="keyword">true</span>;
        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)
        {
            <span class="keyword">if</span> ( e2 &amp; (<span class="number">1</span> &lt;&lt; i) )
            {
                <span class="keyword">if</span> (!bFirst)
                    os &lt;&lt; <span class="string">&quot;, &quot;</span>;
                <span class="keyword">else</span>
                    bFirst = <span class="keyword">false</span>;
                os &lt;&lt; days[i];
            }
        }
    }
    <span class="keyword">return</span> os;
}

<span class="keyword">bool</span> Test(People side)
{
    <span class="keyword">if</span> (side == None)
        <span class="keyword">return</span> <span class="keyword">true</span>;

    <span class="comment">//The father can not be with any of the girls without their mother around
</span>    <span class="keyword">if</span> ( ((Daughter1 | Daughter2) &amp; side) &amp;&amp; (Father &amp; side) &amp;&amp; !(Mother &amp; side) ) {
        <span class="keyword">return</span> <span class="keyword">false</span>;
    }

    <span class="comment">//Mother can not be with any of the boys without their father around
</span>    <span class="keyword">if</span> ( ((Son1 | Son2) &amp; side) &amp;&amp; (Mother &amp; side) &amp;&amp; !(Father &amp; side) ) {
        <span class="keyword">return</span> <span class="keyword">false</span>;
    }

    <span class="comment">//The thief can not be with anyone else without the policeman around
</span>    <span class="keyword">if</span> (((Father | Mother | Son1 | Son2 | Daughter1 | Daughter2) &amp; side) &amp;&amp;
        (Thief &amp; side) &amp;&amp; !(Policeman &amp; side))
    {
        <span class="keyword">return</span> <span class="keyword">false</span>;
    }

    <span class="keyword">return</span> <span class="keyword">true</span>;
}

<span class="keyword">struct</span> Tab {
    <span class="keyword">static</span> <span class="keyword">int</span> tab;
    Tab() { tab++; }
    ~Tab(){ tab--; }
    <span class="keyword">operator</span> <span class="keyword">int</span>() { <span class="keyword">return</span> tab; }
};

<span class="keyword">int</span> Tab::tab = <span class="number">0</span>;

<span class="keyword">void</span> Print(<span class="keyword">int</span> i, People sideA, People sideB, People barco, <span class="keyword">bool</span> bIda)
{
    <span class="keyword">if</span> (bIda)
        cout &lt;&lt;  sideA &lt;&lt; <span class="string">&quot; &gt;&gt;&gt;&gt;&gt; &quot;</span> &lt;&lt; barco &lt;&lt;  <span class="string">&quot; &gt;&gt;&gt;&gt;&gt; &quot;</span> &lt;&lt;  sideB &lt;&lt; endl;
    <span class="keyword">else</span>
        cout &lt;&lt;  sideB &lt;&lt; <span class="string">&quot; &lt;&lt;&lt;&lt;&lt; &quot;</span> &lt;&lt; barco &lt;&lt;  <span class="string">&quot; &lt;&lt;&lt;&lt;&lt; &quot;</span> &lt;&lt; sideA &lt;&lt; endl;
}

<span class="keyword">bool</span> Move(<span class="keyword">const</span> People barco,
           <span class="keyword">const</span> People origem,
           <span class="keyword">const</span> People destino,
           <span class="keyword">const</span> <span class="keyword">bool</span> bIda)
{
    Tab tab;

    <span class="keyword">if</span> (tab.tab &gt; travels)
        <span class="keyword">return</span> <span class="keyword">false</span>;

    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)
    {
        <span class="keyword">const</span> People candidate1 = <span class="keyword">static_cast</span>&lt;People&gt;(<span class="number">1</span> &lt;&lt; i);
        <span class="keyword">if</span> (!(candidate1 &amp; origem)) <span class="keyword">continue</span>;

        <span class="comment">// candidate test
</span>
        <span class="comment">//Only the father, the mother and the policeman know how to operate the boat
</span>        <span class="keyword">if</span> (candidate1 &amp; (Father | Mother | Policeman))
        {
            People nova_origem  = origem &amp; (~ ( candidate1 ) );
            People novo_destino = destino | candidate1;

            <span class="keyword">if</span> ( (candidate1 != barco) &amp;&amp; <span class="comment">// do not repeat
</span>                Test(nova_origem) &amp;&amp; Test(novo_destino))
            {
                <span class="comment">// ok
</span>                <span class="keyword">if</span> (Move(candidate1, novo_destino, nova_origem, !bIda))
                {
                    Print(tab, nova_origem, destino, candidate1, bIda);
                    <span class="keyword">return</span> <span class="keyword">true</span>;
                }
            }
        }

        <span class="comment">// get a candidate
</span>        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; <span class="number">8</span>; j ++)
        {
            <span class="keyword">const</span> People candidate2 = <span class="keyword">static_cast</span>&lt;People&gt;(<span class="number">1</span> &lt;&lt; j);
            <span class="keyword">if</span> ( (candidate2 == candidate1) || !(candidate2 &amp; origem)) <span class="keyword">continue</span>;

            <span class="comment">//Only the father, the mother and the policeman know how to operate the boat
</span>            <span class="keyword">if</span> ( ( candidate1 | candidate2 ) &amp; (Father | Mother | Policeman))
            {
                People nova_origem  = origem &amp; (~ ( candidate1 | candidate2) );
                People novo_destino = destino | candidate1 | candidate2;


                <span class="keyword">if</span> ( (candidate1 | candidate2) != barco &amp;&amp; <span class="comment">// is the same?
</span>                    Test(nova_origem) &amp;&amp; Test(novo_destino))
                {
                    <span class="keyword">bool</span> bStop = bIda ? nova_origem == None : novo_destino == None;
                    <span class="keyword">if</span> (bStop &amp;&amp; tab.tab == travels )
                    {
                        solution_counter++;
                        <span class="keyword">if</span> ( solution == solution_counter)
                        {
                            Print(tab, nova_origem, destino, candidate1 | candidate2, bIda);
                            <span class="keyword">return</span> <span class="keyword">true</span>;
                        }
                    }
                    <span class="keyword">else</span> <span class="keyword">if</span> (Move(candidate1 | candidate2, novo_destino,  nova_origem, !bIda))
                    {
                        Print(tab, nova_origem, destino, candidate1 | candidate2, bIda);
                        <span class="keyword">return</span> <span class="keyword">true</span>;
                    }
                }
            }
        }
    }
    <span class="keyword">return</span> <span class="keyword">false</span>;
}


<span class="keyword">int</span> main()
{
    People origem = Father | Mother | Son1 | Son2 | Daughter1 | Daughter2 | Policeman | Thief;
    People destino = None;


    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)
    {
        solution_counter = <span class="number">0</span>;
        solution = i;
        travels = <span class="number">17</span>; <span class="comment">//  how many travels?
</span>        <span class="keyword">if</span> (Move(None, origem, destino, <span class="keyword">true</span>))
        {
            cout &lt;&lt; i &lt;&lt; endl;
        }
    }
}


<span class="comment">// output (read from bottom to top. there are 8 solutions printed with 17 travels)
</span>
None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Daughter2, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1
Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1
Daughter2 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1 &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son2 &gt;&gt;&gt;&gt;&gt; Son1
Father, Mother, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Son1
Father, Mother, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Son1, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">1</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Daughter1, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter2
Daughter1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter2
Daughter1 &gt;&gt;&gt;&gt;&gt; Mother, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son2 &gt;&gt;&gt;&gt;&gt; Son1
Father, Mother, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Son1
Father, Mother, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Son1, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">2</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Daughter2, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1
Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1
Daughter2 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1 &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1 &gt;&gt;&gt;&gt;&gt; Son2
Father, Mother, Son1, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Son2
Father, Mother, Son1, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Son2, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">3</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Daughter1, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter2
Daughter1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter2
Daughter1 &gt;&gt;&gt;&gt;&gt; Mother, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2, Policeman, Thief
Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2, Policeman, Thief
Mother, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Father, Son1, Son2
Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Son1, Son2
Mother, Daughter1, Daughter2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Son1 &gt;&gt;&gt;&gt;&gt; Son2
Father, Mother, Son1, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Son2
Father, Mother, Son1, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Son2, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">4</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Son2, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Daughter1, Daughter2
Son2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Daughter1, Daughter2
Son2 &gt;&gt;&gt;&gt;&gt; Father, Son1 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter2 &gt;&gt;&gt;&gt;&gt; Daughter1
Father, Mother, Son1, Son2, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Daughter1
Father, Mother, Son1, Son2, Daughter2 &gt;&gt;&gt;&gt;&gt; Daughter1, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">5</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Son1, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son2, Daughter1, Daughter2
Son1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son2, Daughter1, Daughter2
Son1 &gt;&gt;&gt;&gt;&gt; Father, Son2 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter2 &gt;&gt;&gt;&gt;&gt; Daughter1
Father, Mother, Son1, Son2, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Daughter1
Father, Mother, Son1, Son2, Daughter2 &gt;&gt;&gt;&gt;&gt; Daughter1, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">6</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Son2, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Daughter1, Daughter2
Son2 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Daughter1, Daughter2
Son2 &gt;&gt;&gt;&gt;&gt; Father, Son1 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1 &gt;&gt;&gt;&gt;&gt; Daughter2
Father, Mother, Son1, Son2, Daughter1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Daughter2
Father, Mother, Son1, Son2, Daughter1 &gt;&gt;&gt;&gt;&gt; Daughter2, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">7</span>


None &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Father, Mother, Son1, Son2, Daughter1, Daughter2
Thief &gt;&gt;&gt;&gt;&gt; Son1, Policeman &gt;&gt;&gt;&gt;&gt; Father, Mother, Son2, Daughter1, Daughter2
Son1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father, Mother, Son2, Daughter1, Daughter2
Son1 &gt;&gt;&gt;&gt;&gt; Father, Son2 &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2, Policeman, Thief
Son1, Son2 &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2, Policeman, Thief
Father, Son1, Son2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Father &lt;&lt;&lt;&lt;&lt; Mother, Daughter1, Daughter2
Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Father, Mother &gt;&gt;&gt;&gt;&gt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &lt;&lt;&lt;&lt;&lt; Mother &lt;&lt;&lt;&lt;&lt; Daughter1, Daughter2
Father, Son1, Son2, Policeman, Thief &gt;&gt;&gt;&gt;&gt; Mother, Daughter1 &gt;&gt;&gt;&gt;&gt; Daughter2
Father, Mother, Son1, Son2, Daughter1 &lt;&lt;&lt;&lt;&lt; Policeman, Thief &lt;&lt;&lt;&lt;&lt; Daughter2
Father, Mother, Son1, Son2, Daughter1 &gt;&gt;&gt;&gt;&gt; Daughter2, Policeman &gt;&gt;&gt;&gt;&gt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &lt;&lt;&lt;&lt;&lt; Policeman &lt;&lt;&lt;&lt;&lt; Thief
Father, Mother, Son1, Son2, Daughter1, Daughter2 &gt;&gt;&gt;&gt;&gt; Policeman, Thief &gt;&gt;&gt;&gt;&gt; None
<span class="number">8</span>

</pre>


<p>See also: enums bit sets
<!-- Page content end --> 
</article> 
 
</body> 
</html>  