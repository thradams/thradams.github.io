
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 



<p>Utf8 file to wchar</p>


<pre>

<span class="keyword">long</span> <span class="keyword">int</span> get_file_size(FILE* hFile)
{
  <span class="comment">//TODO not byte size.. but chars size.
</span>    fseek(hFile, <span class="number">0</span>L, SEEK_END);
    <span class="keyword">long</span> <span class="keyword">int</span> sz = ftell(hFile);
    fseek(hFile, <span class="number">0</span>L, SEEK_SET);
    <span class="keyword">return</span> sz;
}

size_t ftowstr(FILE *hFile, <span class="keyword">wchar_t</span>** ppszOut)
{
    <span class="keyword">long</span> <span class="keyword">int</span> sz = get_file_size(hFile);
    *ppszOut = (<span class="keyword">wchar_t</span>*) malloc((<span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>) * sz) + <span class="number">1</span>);
    
    wint_t c;
    size_t n = <span class="number">0</span>;
    <span class="keyword">while</span> ((c = fgetwc(hFile)) != WEOF)
    {
        (*ppszOut)[n++] = c;
    }
    (*ppszOut)[n] = <span class="number">0</span>;
    <span class="keyword">return</span> n;
}

size_t string_to_file(<span class="keyword">char</span>* pszFileName, <span class="keyword">wchar_t</span>* psz, size_t len)
{
    FILE *hFile = fopen(pszFileName, <span class="string">&quot;w, ccs=UTF-8&quot;</span>);
    <span class="keyword">if</span> (hFile)
    {
        fwrite(psz, <span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>), len, hFile );
        fclose(hFile);
        <span class="keyword">return</span> len;
    }
    <span class="keyword">return</span> <span class="number">0</span>;
}

size_t file_to_string(<span class="keyword">char</span>* fileName, <span class="keyword">wchar_t</span>** strBuffer)
{
    FILE *hFile = fopen(fileName, <span class="string">&quot;r, ccs=UTF-8&quot;</span>);
    <span class="keyword">if</span> (hFile)
    {   
        size_t n = ftowstr(hFile, strBuffer);
        fclose(hFile);
        <span class="keyword">return</span> n;
    }
    <span class="keyword">return</span> <span class="number">0</span>;
}

<span class="keyword">int</span> main(<span class="keyword">void</span>)
{
    <span class="keyword">wchar_t</span> *pstrBuffer;
    size_t n = file_to_string(<span class="string">&quot;c:\\test.txt&quot;</span>, &amp;pstrBuffer);
    <span class="keyword">if</span> (n)
    {
        printf(<span class="string">&quot;%S&quot;</span>, pstrBuffer);
        
        string_to_file(<span class="string">&quot;c:\\test2.txt&quot;</span>, pstrBuffer, n);

        free(pstrBuffer);
    }
    
    <span class="keyword">return</span> EXIT_SUCCESS;
}

</pre>




<!-- Page content end --> 
</article> 
 
</body> 
</html>  