
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 


<h2>Fun with lambdas - for_each_where</h2>

<pre>

<span class="keyword">template</span>&lt;<span class="keyword">class</span> IT, <span class="keyword">class</span> F, <span class="keyword">class</span> W&gt;
F for_each_where(IT i, IT e, W w, F f)
{
    <span class="keyword">for</span> (; i != e; ++i)
    {
        <span class="keyword">if</span> (w(*i))
        {
            f(*i);
        }
    }
    <span class="keyword">return</span> (f);
}

<span class="keyword">int</span> main()
{
    std::<span class="keyword2">vector</span>&lt;Point&gt; v;
    v.push_back(Point(<span class="number">1</span>, <span class="number">1</span>));
    v.push_back(Point(<span class="number">2</span>, <span class="number">1</span>));
    v.push_back(Point(<span class="number">3</span>, <span class="number">1</span>));


    for_each_where(v.begin(), v.end(),
                   [](Point&amp; p) { <span class="keyword">return</span> p.x &gt; <span class="number">1</span>; }, <span class="comment">// condition
</span>                   [](Point&amp; p) { cout &lt;&lt; p.x; });   <span class="comment">// code
</span>}
</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  