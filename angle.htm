<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->
<pre>

<span class="keyword">#include</span> &lt;type_traits&gt;

<span class="keyword">struct</span> Deg {};
<span class="keyword">struct</span> Rad {};

<span class="keyword">template</span>&lt;<span class="keyword">class</span> ValueType, <span class="keyword">class</span> AngleType&gt;
<span class="keyword">class</span> Angle
{
<span class="keyword">public</span>:
    <span class="keyword">explicit</span> Angle(ValueType v) : m_value(v) {}
    Angle(<span class="keyword">const</span> Angle&amp; other) : m_value(other.value) {}

    <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
    Angle&amp; <span class="keyword">operator</span> = (<span class="keyword">const</span> Angle&lt;T, AngleType&gt;&amp; other)
    {
        m_value = other.value();
        <span class="keyword">return</span> *<span class="keyword">this</span>;
    }
    
    ValueType value() <span class="keyword">const</span>
    {
        <span class="keyword">return</span> m_value;
    }

<span class="keyword">private</span>:
    ValueType m_value;
};


<span class="keyword">template</span> &lt;<span class="keyword">class</span> ValueType&gt;
<span class="keyword">typename</span>  Angle&lt;ValueType, Rad&gt; AngleRad(<span class="keyword">const</span> Angle&lt;ValueType, Deg&gt;&amp; deg)
{
    <span class="keyword">return</span> Angle&lt;ValueType, Rad&gt;(<span class="keyword">static_cast</span>&lt;ValueType&gt;(deg.value() * <span class="number">0.0</span><span class="number">1745329251994329576923690768489</span>));
}

<span class="keyword">template</span> &lt;<span class="keyword">class</span> ValueType&gt;
<span class="keyword">typename</span>  Angle&lt;ValueType, Deg&gt; AngleDeg(<span class="keyword">const</span> Angle&lt;ValueType, Rad&gt;&amp; rad)
{
    <span class="keyword">return</span> Angle&lt;ValueType, Deg&gt;(<span class="keyword">static_cast</span>&lt;ValueType&gt;(rad.value() * <span class="number">57.2</span><span class="number">95779513082320876798154814105</span>));
}

<span class="keyword">template</span> &lt;<span class="keyword">class</span> ValueType&gt; <span class="keyword">typename</span> Angle&lt;ValueType, Rad&gt; AngleRad(<span class="keyword">const</span> ValueType&amp; v)
{
    <span class="keyword">return</span> Angle&lt;ValueType, Rad&gt;(v);
}

<span class="keyword">template</span> &lt;<span class="keyword">class</span> ValueType&gt; <span class="keyword">typename</span> Angle&lt;ValueType, Deg&gt; AngleDeg(<span class="keyword">const</span> ValueType&amp; v)
{
    <span class="keyword">return</span> Angle&lt;ValueType, Deg&gt;(v);
}

<span class="keyword">template</span>&lt;<span class="keyword">class</span> LeftValueType, <span class="keyword">class</span> RightValueType, <span class="keyword">class</span> AngleType&gt;
<span class="keyword">auto</span> <span class="keyword">operator</span> + (<span class="keyword">const</span> Angle&lt;LeftValueType, AngleType&gt;&amp; left,
                 <span class="keyword">const</span> Angle&lt;RightValueType, AngleType&gt;&amp; right) 
  -&gt; Angle &lt; <span class="keyword">decltype</span>(left.value() + right.value()), AngleType &gt;
{
    <span class="keyword">return</span> Angle &lt; <span class="keyword">decltype</span>(left.value() + right.value()), AngleType &gt; (left.value() + right.value());
}

<span class="keyword">int</span> main()
{
    Angle&lt;<span class="keyword">double</span>, Rad&gt; angleRad1(<span class="number">4</span>);
    Angle&lt;<span class="keyword">float</span>, Rad&gt; angleRad2(AngleRad(Angle&lt;<span class="keyword">float</span>, Deg&gt;(<span class="number">3</span>)));
    Angle&lt;<span class="keyword">float</span>, Deg&gt; angleDeg1(<span class="number">1</span>);
    Angle&lt;<span class="keyword">double</span>, Deg&gt; angleDeg2(<span class="number">1</span>);
    angleDeg1 = AngleDeg(angleRad1);
    angleRad1 = AngleRad(<span class="number">1</span>);
    angleRad1 = AngleRad(<span class="number">1</span>);
    angleRad1 = angleRad1;
    angleRad1 = angleRad2;
    angleRad2 = AngleRad(angleDeg1);
    angleRad2 = AngleRad(angleDeg2);
    angleRad2  = angleRad2 + angleRad1;
    <span class="keyword">return</span> <span class="number">0</span>;
}



</pre>

<!-- Page content end --> 
</article> 
 
</body> 
</html>  