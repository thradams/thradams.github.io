<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<p><a href="algorithms.htm">Algorithms</a></p>

<h3>sig_digits</h3>
<p>The algorithm <strong>sig</p>

<hr>

<h2>Declaration</h2>
<pre>
<span class="keyword">template</span>&lt;<span class="keyword">class</span> It&gt;
size_t sig_digits(It first, It last);
</pre>

<hr>
<h3>Sample</h3>
<pre>
         {1}     -&gt; 1
            base

         {0}     -&gt; 1
            base

   {0, 0, 0}     -&gt; 1
            base

{0, 0, 1, 2}     -&gt; 2
            base

   {1, 1, 1}     -&gt; 3
            base
</pre>

<hr>
<h3>Sample</h3>

<pre>

<span class="keyword">void</span> sig_digits_test()
{
    <span class="keyword">using</span> <span class="keyword">namespace</span> std;

    <span class="keyword">int</span> a[] = { <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> };
    assert(sig_digits(begin(a), end(a)) == <span class="number">1</span>);

    <span class="keyword">int</span> b[] = { <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> };
    assert(sig_digits(begin(b), end(b)) == <span class="number">1</span>);
    
    <span class="keyword">int</span> c[] = { <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> };
    assert(sig_digits(begin(c), end(c)) == <span class="number">3</span>);

    <span class="keyword">int</span> d[] = { <span class="number">0</span> };
    assert(sig_digits(begin(d), end(d)) == <span class="number">1</span>);

    <span class="keyword">int</span> e[] = { <span class="number">1</span> };
    assert(sig_digits(begin(e), end(e)) == <span class="number">1</span>);        
}
</pre>


<hr>
<h3>Implementation</h3>
<pre>
<span class="keyword">template</span>&lt;<span class="keyword">class</span> It&gt;
size_t sig_digits(It first, It last)
{
  --last;
  <span class="keyword">for</span> (; first != last &amp;&amp; *last == <span class="number">0</span>; )
    --last;
  last++;
  <span class="keyword">return</span> (last - first);
}
</pre>



<!-- Page content end --> 
</article> 
 
</body> 
</html>  