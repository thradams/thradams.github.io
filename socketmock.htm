<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<h1> Mocking sockets</h1>

<pre>
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

#define MOCK_SOCKET_SIZE 10
char s_socketBuffer[MOCK_SOCKET_SIZE];
char *pSend = s_socketBuffer;
char *pReceive = s_socketBuffer;

int recv(int sockfd, void *buf, size_t len, int flags)
{
  size_t size = pSend - pReceive;
  size_t smaller = len &lt; size ? len : size;

  strncpy((char*)buf, pReceive, smaller);
  pReceive += smaller;
  pSend = s_socketBuffer;//reset
  return smaller;
}

int send(int sockfd, const void *buf0, size_t len, int flags)
{
  size_t size = (s_socketBuffer + MOCK_SOCKET_SIZE) - pSend;
  size_t smaller = len &lt; size ? len : size;
  strncpy(pSend, (char*)buf0, smaller);
  pSend += smaller;
  pReceive = s_socketBuffer;//reset
  return smaller;
}

void Client(int socket)
{
  send(socket, &quot;hi&quot;, 2, 0);
}

void Server(int socket)
{
  char buf[10];
  int i = recv(socket, buf, 10, 0);
}

int main()
{
  int socket = 0;//mock
  Client(socket);
  Server(socket);
}

</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  