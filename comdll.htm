
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 


<h2>Creating COM objects directly from the dll</h2>

<p>This example shows how to load a COM object from his dll file.</p>

<p>It is not necessary to use a registered class and CoCreateInstance.</p>

<pre>

HRESULT GetClassFactory(LPOLESTR pszDllName,
                        REFCLSID rclsid, <span class="comment">//CoClass ID
</span>                        IClassFactory **ppIClassFactory
                        )
{
    <span class="keyword">if</span> (ppIClassFactory == <span class="number">0</span>)
        <span class="keyword">return</span> E_POINTER;

    *ppIClassFactory = <span class="number">0</span>;
    HMODULE h = CoLoadLibrary(pszDllName, <span class="keyword">true</span>);

    <span class="keyword">if</span> (h == NULL)
    {
        DWORD lw32 = ::GetLastError();
        <span class="keyword">return</span> HRESULT_FROM_WIN32(lw32);
    }

    <span class="keyword">typedef</span> HRESULT (pascal *PFDllGetClassObject)(REFCLSID , REFIID , LPVOID* );
    PFDllGetClassObject pGetClassObject =
        (PFDllGetClassObject) ::GetProcAddress(h, <span class="string">&quot;DllGetClassObject&quot;</span>);

    <span class="keyword">if</span> (pGetClassObject == <span class="number">0</span>)
    {
        DWORD lw32 = ::GetLastError();
        <span class="keyword">return</span> HRESULT_FROM_WIN32(lw32);
    }

    <span class="keyword">return</span> pGetClassObject(rclsid, IID_IClassFactory, (<span class="keyword">void</span>**) ppIClassFactory);
}

HRESULT LocalCoCreateInstance(LPOLESTR pszDllName,
                              REFCLSID rclsid,
                              REFIID riid,
                              LPVOID* ppv,
                              LPUNKNOWN pUnkOuter = <span class="number">0</span>)

{
    CComPtr&lt;IClassFactory&gt; spClassFactory;
    HRESULT hr = GetClassFactory(pszDllName, rclsid, &amp;spClassFactory);
    <span class="keyword">if</span> (SUCCEEDED(hr))
    {
        hr = spClassFactory-&gt;CreateInstance(pUnkOuter, riid, ppv);
    }
    <span class="keyword">return</span> hr;
}
</pre>


<p>example</p>
<pre>
<span class="keyword">int</span> main()
{
    CoInitialize(<span class="number">0</span>);
    OLECHAR * psz = L<span class="string">&quot;dllfile.dll&quot;</span>;

    CComPtr&lt;IMyNewObject&gt; sp;
    HRESULT hr = LocalCoCreateInstance(psz,
                                       CLSID_MyNewObject,
                                       __uuidof(IMyNewObject),
                                       (<span class="keyword">void</span>**)&amp;sp);
    <span class="keyword">if</span> (SUCCEEDED(hr))
    {
        //...
    }
    CoUninitialize();
}
</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  