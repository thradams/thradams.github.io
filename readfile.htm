<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<p>Reads a file with optional BOM, allocates memory with malloc and returns the string.</p>


<pre>


<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;stdlib.h&gt;
<span class="keyword">#include</span> &lt;sys/stat.h&gt;
<span class="keyword">#include</span> &lt;errno.h&gt;
<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>.h&gt;
<span class="keyword">#include</span> &lt;stdbool.h&gt;


<span class="keyword">inline</span> <span class="keyword">bool</span> fread2(<span class="keyword">void</span>* buffer, size_t size, size_t count, FILE* stream, size_t* sz)
{
    *sz = <span class="number">0</span>;<span class="comment">//out
</span>
    <span class="keyword">bool</span> result = <span class="keyword">false</span>;
    size_t n = fread(buffer, size, count, stream);
    <span class="keyword">if</span> (n == count) {
        *sz = n;
        result = <span class="keyword">true</span>;
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; count) {
        <span class="keyword">if</span> (feof(stream))
        {
            *sz = n;
            result = <span class="keyword">true</span>;
        }
    }
    <span class="keyword">return</span> result;
}

<span class="keyword">char</span>* readfile(<span class="keyword">const</span> <span class="keyword">char</span>* path)
{
    <span class="keyword">char</span>* result = NULL;

    <span class="keyword">struct</span> stat info;
    <span class="keyword">if</span> (stat(path, &amp;info) == <span class="number">0</span>)
    {
        <span class="keyword">char</span>* data = (<span class="keyword">char</span>*)malloc(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * info.st_size + <span class="number">1</span>);
        <span class="keyword">if</span> (data != NULL)
        {
            FILE* file = fopen(path, <span class="string">&quot;r&quot;</span>);
            <span class="keyword">if</span> (file != NULL)
            {
                <span class="keyword">if</span> (info.st_size &gt;= <span class="number">3</span>)
                {
                    size_t n = <span class="number">0</span>;
                    <span class="keyword">if</span> (fread2(data, <span class="number">1</span>, <span class="number">3</span>, file, &amp;n))
                    {
                        <span class="keyword">if</span> (n == <span class="number">3</span>)
                        {
                            <span class="keyword">if</span> (data[<span class="number">0</span>] == (<span class="keyword">char</span>)<span class="number">0</span>xEF &amp;&amp;
                                data[<span class="number">1</span>] == (<span class="keyword">char</span>)<span class="number">0</span>xBB &amp;&amp;
                                data[<span class="number">2</span>] == (<span class="keyword">char</span>)<span class="number">0</span>xBF)
                            {
                                <span class="keyword">if</span> (fread2(data, <span class="number">1</span>, info.st_size - <span class="number">3</span>, file, &amp;n))
                                {
                                    <span class="comment">//ok
</span>                                    data[n] = <span class="number">0</span>;
                                    result = data; data = <span class="number">0</span>;
                                }
                            }
                            <span class="keyword">else</span> <span class="keyword">if</span> (fread2(data + <span class="number">3</span>, <span class="number">1</span>, info.st_size - <span class="number">3</span>, file, &amp;n))
                            {
                                data[<span class="number">3</span> + n] = <span class="number">0</span>;
                                result = data; data = <span class="number">0</span>;
                            }
                        }
                        <span class="keyword">else</span>
                        {
                            data[n] = <span class="number">0</span>;
                            result = data; data = <span class="number">0</span>;
                        }
                    }
                }
                <span class="keyword">else</span>
                {
                    size_t n = <span class="number">0</span>;
                    <span class="keyword">if</span> (fread2(data, <span class="number">1</span>, info.st_size, file, &amp;n))
                    {
                        data[n] = <span class="number">0</span>;
                        result = data; data = <span class="number">0</span>;
                    }
                }
                fclose(file);
            }
            free(data);
        }
    }
    <span class="keyword">return</span> result;
}

</pre>


<pre>
<span class="keyword">int</span> main()
{
    <span class="keyword">char</span>* s = readfile(<span class="string">&quot;teste.txt&quot;</span>);
    <span class="keyword">if</span> (s != NULL)
    {
        free(s);
    }
    <span class="keyword">else</span>
    {
        printf(<span class="string">&quot;%s\n&quot;</span>, strerror(errno));
    }
}
</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  