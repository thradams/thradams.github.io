
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 



<p>Function to save a string into a file.</p>

<pre>

<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>&gt;
<span class="keyword">#include</span> &lt;fstream&gt;
<span class="keyword">#include</span> &lt;codecvt&gt;

<span class="keyword">void</span> StringToFile(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* psz,
                  <span class="keyword">const</span> <span class="keyword">wchar_t</span>* fileName)
{
  std::locale ulocale(std::locale(), <span class="keyword">new</span> std::codecvt_utf8&lt;<span class="keyword">wchar_t</span>&gt;) ;
  std::wofstream ofs(fileName);

  <span class="keyword">if</span> (ofs.is_open())
  {
    ofs.imbue(ulocale);
    ofs &lt;&lt; psz;
  }
}

</pre>


<p>Reads a file and returns a string(not tested)</p>
<pre>

<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>&gt;
<span class="keyword">#include</span> &lt;fstream&gt;
<span class="keyword">#include</span> &lt;codecvt&gt;

std::<span class="keyword2">wstring</span> FileToString(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* fileName)
{
  std::<span class="keyword2">wstring</span> result;
  std::locale ulocale(std::locale(), <span class="keyword">new</span> std::codecvt_utf8&lt;<span class="keyword">wchar_t</span>&gt;) ;
  std::wifstream ifs(fileName);

  <span class="keyword">if</span> (ifs.is_open())
  {
    std::<span class="keyword2">wstring</span> ws;
    <span class="keyword">bool</span> newline = <span class="keyword">false</span>;
    <span class="keyword">while</span> (std::getline(ifs, ws))
    {
      <span class="keyword">if</span> (newline)
      {
        result += L<span class="string">&quot;\n&quot;</span>;
        newline = <span class="keyword">false</span>;
      }
      result += ws;
      newline = <span class="keyword">true</span>;      
    }
  }

  <span class="keyword">return</span> result;
}

</pre>



<!-- Page content end --> 
</article> 
 
</body> 
</html>  