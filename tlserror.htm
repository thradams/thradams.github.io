
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 



<pre>
<span class="keyword">#pragma</span> once
<span class="keyword">#include</span> &lt;stdarg.h&gt;

<span class="keyword">struct</span> error
{
    <span class="keyword">char</span>* str; <span class="comment">/*c-string*/</span>
    <span class="keyword">int</span> size; <span class="comment">/*number of chars excluding the 0 at end*/</span>
    <span class="keyword">int</span> capacity; <span class="comment">/*size in bytes including 0 at the end*/</span>
};

<span class="keyword">struct</span> error* tls_error;
<span class="keyword">int</span> error(<span class="keyword">const</span> <span class="keyword">char</span>* fmt, ...);
</pre>


<pre>
<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;assert.h&gt;
<span class="keyword">#include</span> <span class="string">&quot;error.h&quot;</span>

<span class="keyword">#define</span> <span class="keyword">thread_local</span> __declspec(thread)

<span class="keyword">struct</span> error* tls_error;

<span class="keyword">int</span> error_vafprintf(<span class="keyword">struct</span> error* error, <span class="keyword">const</span> <span class="keyword">char</span>* fmt, va_list args)
{
    <span class="keyword">int</span> size = <span class="number">0</span>;
    va_list tmpa;
    va_copy(tmpa, args);
    size = vsnprintf(error-&gt;str + error-&gt;size, error-&gt;capacity - error-&gt;size, fmt, tmpa);
    va_end(tmpa);

    <span class="keyword">if</span> (size &lt; <span class="number">0</span>)
        <span class="keyword">return</span> <span class="number">-1</span>;

    error-&gt;size += size;

    <span class="keyword">if</span> (error-&gt;size &gt; error-&gt;capacity)  <span class="comment">/*truncated*/</span> {        
        error-&gt;size = error-&gt;capacity - <span class="number">1</span>;
    }

    <span class="keyword">return</span> size;
}

<span class="keyword">int</span> error(<span class="keyword">const</span> <span class="keyword">char</span>* fmt, ...)
{
    va_list args;
    va_start(args, fmt);
    <span class="keyword">int</span> size = error_vafprintf(tls_error, fmt, args);
    va_end(args);
    <span class="keyword">return</span> size;
}

</pre>



<pre>

<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> <span class="string">&quot;tinycthread.h&quot;</span>
<span class="keyword">#include</span>  <span class="string">&quot;error.h&quot;</span>
<span class="keyword">#include</span> &lt;stdlib.h&gt;
<span class="keyword">#include</span> &lt;stdbool.h&gt;

<span class="keyword">bool</span> F()
{
    error(<span class="string">&quot;1234&quot;</span>);
    <span class="keyword">return</span> <span class="keyword">false</span>;
}

<span class="keyword">int</span> Start(<span class="keyword">void</span>* arg)
{
    <span class="keyword">char</span> buffer[<span class="number">50</span>] = {<span class="number">0</span>};
    <span class="keyword">struct</span> error er = { .str = buffer, .capacity = <span class="keyword">sizeof</span>(buffer)};
    tls_error = &amp;er;
    
    <span class="keyword">if</span> (!F())
    {
        <span class="comment">//tls_error
</span>    }

    <span class="keyword">return</span> <span class="number">1</span>;
}

<span class="keyword">int</span> main()
{
    thrd_t thr1;
    <span class="keyword">int</span> r = thrd_create(&amp;thr1, Start, <span class="number">0</span>);
    
    thrd_t thr2;
    r = thrd_create(&amp;thr2, Start, <span class="number">0</span>);
    

    <span class="keyword">int</span> res;
    thrd_join(thr1, &amp;res);
    thrd_join(thr2, &amp;res);
}

</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  