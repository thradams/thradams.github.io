<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<p>Testing strings utils.</p>

<pre>


<span class="keyword">#include</span> &lt;stdlib.h&gt;
<span class="keyword">#include</span> &lt;assert.h&gt;
<span class="keyword">#include</span>  &lt;errno.h&gt;
<span class="keyword">#include</span>  &lt;<span class="keyword2">string</span>.h&gt;

<span class="keyword">static</span> <span class="keyword">inline</span> errno_t  wstr_reserve(<span class="keyword">wchar_t</span>** pptext,
                                    size_t* capacity,
                                    size_t new_capacity)
{
    assert(pptext &amp;&amp; capacity);
    assert(new_capacity &gt; <span class="number">0</span>);

    <span class="keyword">if</span> (new_capacity &lt; *capacity)
    {
        <span class="keyword">return</span> <span class="number">0</span>;
    }

    errno_t r = ENOMEM;
    <span class="keyword">wchar_t</span>* ptemp = <span class="number">0</span>;

    <span class="keyword">if</span> (*pptext == NULL)
    {
        ptemp = (<span class="keyword">wchar_t</span>*)malloc(<span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>) * (new_capacity));
        <span class="keyword">if</span> (ptemp)
        {
            ptemp[<span class="number">0</span>] = <span class="string">'\0'</span>;
        }
    }
    <span class="keyword">else</span>
    {
        ptemp = (<span class="keyword">wchar_t</span>*)realloc(*pptext, <span class="keyword">sizeof</span>(<span class="keyword">wchar_t</span>) * (new_capacity));
    }

    <span class="keyword">if</span> (ptemp)
    {
        *pptext = ptemp;
        *capacity = new_capacity;
        r = <span class="number">0</span>;
    }

    <span class="keyword">return</span> r;
}

errno_t wstr_append(<span class="keyword">wchar_t</span> **pptext,
                    size_t* capacity,
                    size_t* size,
                    <span class="keyword">const</span> <span class="keyword">wchar_t</span>* psource)
{
    errno_t r = <span class="number">0</span>;
    size_t s = wcslen(psource);
    r = wstr_reserve(pptext, capacity, *size + s + <span class="number">1</span>);
    <span class="keyword">if</span> (r == <span class="number">0</span>)
    {
        r = wcscpy_s(*pptext + *size, *capacity - *size, psource);
        <span class="keyword">if</span> (r == <span class="number">0</span>)
        {
            *size += s;
        }
    }
    <span class="keyword">return</span> r;
}

errno_t wstr_set(<span class="keyword">wchar_t</span> **pptext,
                 size_t* capacity,
                 size_t* size,
                 <span class="keyword">const</span> <span class="keyword">wchar_t</span>* psource)
{
    errno_t r = <span class="number">0</span>;
    size_t s = wcslen(psource);
    r = wstr_reserve(pptext, capacity, s + <span class="number">1</span>);
    <span class="keyword">if</span> (r == <span class="number">0</span>)
    {
        r = wcscpy_s(*pptext, *capacity, psource);
        <span class="keyword">if</span> (r == <span class="number">0</span>)
        {
            *size = s;
        }
    }
    <span class="keyword">return</span> r;
}

<span class="keyword">void</span> wstr_clear(<span class="keyword">wchar_t</span> **pptext,
                size_t* size)
{
    (*pptext)[<span class="number">0</span>] = <span class="number">0</span>;
    *size = <span class="number">0</span>;
}

<span class="keyword">void</span> wstr_destroy(<span class="keyword">wchar_t</span> **pptext,
                  size_t* capacity,
                  size_t* size)
{
    free(*pptext);
    *capacity = <span class="number">0</span>;
    *size = <span class="number">0</span>;
}

<span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])
{
    <span class="keyword">wchar_t</span> *ptext = <span class="number">0</span>;
    size_t capacity = <span class="number">0</span>;
    size_t size = <span class="number">0</span>;

    wstr_append(&amp;ptext, &amp;capacity, &amp;size, L<span class="string">&quot;teste&quot;</span>);
    wstr_append(&amp;ptext, &amp;capacity, &amp;size, L<span class="string">&quot;2&quot;</span>);
    wstr_set(&amp;ptext, &amp;capacity, &amp;size, L<span class="string">&quot;b&quot;</span>);
    wstr_clear(&amp;ptext, &amp;size);
    wstr_destroy(&amp;ptext, &amp;capacity, &amp;size);


    <span class="keyword">return</span> <span class="number">0</span>;
}




</pre>




<!-- Page content end --> 
</article> 
 
</body> 
</html>  