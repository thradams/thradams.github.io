<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<pre>
<span class="keyword">#include</span> &lt;errno.h&gt;
<span class="keyword">#include</span> &lt;varargs.h&gt;
<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;stdlib.h&gt;
<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>&gt;
<span class="keyword">#include</span> &lt;stdarg.h&gt;

<span class="keyword">typedef</span> <span class="keyword">struct</span>
{
  <span class="keyword">char</span>*  c_str;
  <span class="keyword">int</span> size;
  <span class="keyword">int</span> capacity;
} osstream;


<span class="keyword">int</span> ss_putc(<span class="keyword">int</span> ch, osstream *sb)
{
  <span class="keyword">if</span> (sb-&gt;size + <span class="number">1</span> &gt; sb-&gt;capacity)
  {
    <span class="keyword">int</span> n = sb-&gt;capacity + sb-&gt;capacity / <span class="number">2</span>;
    <span class="keyword">if</span> (n &lt; sb-&gt;size + <span class="number">1</span>)
    {
      n = sb-&gt;size + <span class="number">1</span>;
    }

    <span class="keyword">char</span>* pnew = sb-&gt;c_str;
    pnew = (<span class="keyword">char</span>*)realloc(pnew, (n + <span class="number">1</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));
    <span class="keyword">if</span> (pnew)
    {
      sb-&gt;c_str = pnew;
      sb-&gt;capacity = n;
    }
    <span class="keyword">else</span>
    {
      errno = ENOMEM;
      ch = EOF;
    }
  }

  <span class="keyword">if</span> (ch != EOF)
  {
    sb-&gt;c_str[sb-&gt;size] = ch;
    sb-&gt;c_str[sb-&gt;size + <span class="number">1</span>] = <span class="number">0</span>;
    sb-&gt;size++;
  }

  <span class="keyword">return</span> ch;
}

<span class="keyword">int</span> ss_close(osstream* stream)
{
  free(stream-&gt;c_str);
  <span class="keyword">return</span> <span class="number">0</span>;
}


<span class="keyword">int</span> ss_vafprintf(osstream* stream, <span class="keyword">const</span> <span class="keyword">char</span> *fmt, va_list args)
{
  <span class="keyword">int</span> size = <span class="number">0</span>;
  va_list tmpa;

  va_copy(tmpa, args);

  size = vsnprintf(stream-&gt;c_str + stream-&gt;size, stream-&gt;capacity - stream-&gt;size, fmt, tmpa);

  va_end(tmpa);

  <span class="keyword">if</span> (size &lt; <span class="number">0</span>) 
  {
    <span class="keyword">return</span> <span class="number">-1</span>; 
  }

  <span class="keyword">if</span> (stream-&gt;size + size &gt; stream-&gt;capacity)
  {
    <span class="keyword">char</span>* pnew = stream-&gt;c_str;
    pnew = (<span class="keyword">char</span>*)realloc(pnew, (stream-&gt;size + size + <span class="number">1</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));
    <span class="keyword">if</span> (pnew)
    {
      stream-&gt;c_str = pnew;
      stream-&gt;capacity = stream-&gt;size + size;
    }
    <span class="keyword">else</span>
    {
      errno = ENOMEM;      
      size = <span class="number">-1</span>;
    }
  }
  
  size = vsprintf(stream-&gt;c_str + stream-&gt;size, fmt, args);
  <span class="keyword">if</span> (size &gt; <span class="number">0</span>)
  {
    stream-&gt;size += size;
  }
  <span class="keyword">return</span> size;
}

<span class="keyword">int</span> ss_printf(osstream* stream, <span class="keyword">const</span> <span class="keyword">char</span> *fmt, ...)
{
  va_list args;
  va_start(args, fmt);
  <span class="keyword">int</span> size = ss_vafprintf(stream, fmt, args);
  va_end(args);
  <span class="keyword">return</span> size;  
}

<span class="keyword">int</span> main(<span class="keyword">void</span>)
{
  
  osstream ss = { <span class="number">0</span> };
  ss_printf(&amp;ss, <span class="string">&quot;hello&quot;</span>);
  
  printf(<span class="string">&quot;buf = `%s', size = %zu\n&quot;</span>, ss.c_str, ss.size);

  ss_printf(&amp;ss, <span class="string">&quot;, world&quot;</span>);
  ss_close(&amp;ss);
  
  <span class="keyword">return</span> <span class="number">0</span>;
}

</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  