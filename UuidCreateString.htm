
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 


<p>Creating UUID string on windows.</p>

<pre>

<span class="keyword">#include</span> <span class="string">&quot;stdafx.h&quot;</span>

<span class="keyword">#include</span> &lt;Rpc.h&gt;
<span class="keyword">#pragma</span> comment( lib, <span class="string">&quot;Rpcrt4.lib&quot;</span> )

<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>&gt;

<span class="keyword">bool</span> UuidCreateString(std::<span class="keyword2">string</span>&amp; s)
{
    s.clear(); <span class="comment">//out
</span>    UUID  uuid;

    <span class="keyword">if</span> (UuidCreate(&amp;uuid) != RPC_S_OK)
    {
        <span class="keyword">return</span> <span class="keyword">false</span>;
    }

    UCHAR* psz = <span class="number">0</span>;

    <span class="keyword">if</span> (UuidToStringA(&amp;uuid, &amp;psz) != RPC_S_OK)
    {
        s = (<span class="keyword">const</span> <span class="keyword">char</span>*)psz;
        RpcStringFreeA(&amp;psz);
        <span class="keyword">return</span> <span class="keyword">true</span>;
    }

    <span class="keyword">return</span> <span class="keyword">false</span>;
}

<span class="keyword">int</span> _tmain(<span class="keyword">int</span> argc, _TCHAR* argv[])
{
  std::<span class="keyword2">string</span> s;  
  UuidCreateString(s);
  <span class="keyword">return</span> <span class="number">0</span>;
}


</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  