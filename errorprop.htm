<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
   <title>Thiago's website</title>
   <link href="trastyle.css" type="text/css" rel="stylesheet" />
   <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" />
</head>

<body>
   <div class="pageheader">

      <h2>Thiago R. Adams website</h2>
      <p>
         <a class="linkbox" href="index.htm">HOME</a>
         <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
         <a class="linkbox" href="about.htm">ABOUT</a>
         <br />
      </p>
   </div>

   <article>
  
      <!-- Page content begin -->

<p>&quot;errorjmp.h&quot;</p>

<pre>

<span class="keyword">#pragma</span> once

<span class="keyword">#include</span> &lt;setjmp.h&gt;

<span class="keyword">#define</span> _Thread_local _declspec(thread) 

_Thread_local jmp_buf* pCurrent = <span class="number">0</span>;

<span class="keyword">#define</span> THROW longjmp(*pCurrent, <span class="number">1</span>)
<span class="keyword">#define</span> THROW_(x) longjmp(*pCurrent, x)

<span class="keyword">#define</span> STOP_PROPAGATION pCurrentOld = <span class="number">0</span>
<span class="keyword">#define</span> EXCEPT_ERROR er

<span class="keyword">#define</span> __TRY \
{\
    jmp_buf* pCurrentOld = pCurrent;\
    jmp_buf jmp;\
    <span class="keyword">int</span> er = setjmp(jmp);\
    <span class="keyword">if</span> (er == <span class="number">0</span>)\
    {\
        pCurrent = &amp;jmp;\
    }\
    <span class="keyword">if</span> (er == <span class="number">0</span>)
        
<span class="keyword">#define</span> __EXCEPT\
    <span class="keyword">if</span> (er == <span class="number">0</span>)\
    {\
        pCurrent = pCurrentOld;\
    }\
    <span class="keyword">else</span>

<span class="keyword">#define</span> __EXCEPT_END \
    <span class="keyword">if</span> (er != <span class="number">0</span> &amp;&amp; pCurrentOld)\
    {\
        pCurrent = pCurrentOld;\
        longjmp(*pCurrentOld, EXCEPT_ERROR);\
    }\
}


</pre>


<pre>


<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>.h&gt;
<span class="keyword">#include</span> <span class="string">&quot;errorjmp.h&quot;</span>


<span class="keyword">void</span> F2() 
{ 
    printf(<span class="string">&quot;F2\n&quot;</span>);
    THROW_(<span class="number">2</span>);
}

<span class="keyword">void</span> F1()
{
    printf(<span class="string">&quot;F1\n&quot;</span>);

    __TRY
    {
        F2();
    }
    __EXCEPT
    {
        printf(<span class="string">&quot;__EXCEPT of F1\n&quot;</span>);
        <span class="comment">//STOP_PROPAGATION;
</span>    }
    __EXCEPT_END
}

<span class="keyword">void</span> F3() { printf(<span class="string">&quot;F3\n&quot;</span>); }

<span class="keyword">void</span> F4() {  printf(<span class="string">&quot;F4\n&quot;</span>); }

<span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])
{
    __TRY
    {
        F1();
        F3();
        F4();
    }
    __EXCEPT
    {
        printf(<span class="string">&quot;__EXCEPT of main %d\n&quot;</span>, EXCEPT_ERROR);
    }
    __EXCEPT_END

    <span class="keyword">return</span> <span class="number">0</span>;
}




</pre>


<pre>
<span class="keyword">#pragma</span> once

<span class="keyword">#include</span> &lt;setjmp.h&gt;

<span class="keyword">#define</span> _Thread_local _declspec(thread) 

_Thread_local <span class="keyword">int</span> errorcode = <span class="number">0</span>;

<span class="keyword">#define</span> GOTO_ON_ERROR <span class="keyword">if</span> (errorcode !=<span class="number">0</span>) <span class="keyword">goto</span> ERROR_LABEL; 

<span class="keyword">#define</span> THROW errorcode = <span class="number">1</span>;  <span class="keyword">goto</span> END_LABEL 
<span class="keyword">#define</span> THROW_(x) errorcode = (x);  <span class="keyword">goto</span> END_LABEL 

<span class="keyword">#define</span> EXCEPT_ERROR errorcode 

<span class="keyword">#define</span> __TRY <span class="keyword">if</span> (<span class="number">1</span>) 

<span class="keyword">#define</span> __EXCEPT <span class="keyword">else</span>  ERROR_LABEL: 

<span class="keyword">#define</span> __EXCEPT_END <span class="keyword">if</span> (errorcode != <span class="number">0</span>) <span class="keyword">goto</span> END_LABEL; 

<span class="keyword">#define</span> STOP_PROPAGATION errorcode= <span class="number">0</span> 
</pre>


<pre>

<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>.h&gt;
<span class="keyword">#include</span> <span class="string">&quot;errorjmp.h&quot;</span>


<span class="keyword">void</span> F2() 
{ 
    printf(<span class="string">&quot;F2\n&quot;</span>);
    THROW_(<span class="number">2</span>);
    
END_LABEL:;
}

<span class="keyword">void</span> F1()
{
    printf(<span class="string">&quot;F1\n&quot;</span>);

    __TRY
    {
        F2(); GOTO_ON_ERROR
    }
    __EXCEPT
    {
        printf(<span class="string">&quot;__EXCEPT of F1\n&quot;</span>);
        <span class="comment">//STOP_PROPAGATION;
</span>    }
    __EXCEPT_END

   printf(<span class="string">&quot;__\n&quot;</span>);

END_LABEL:;
}

<span class="keyword">void</span> F3() { printf(<span class="string">&quot;F3\n&quot;</span>); }

<span class="keyword">void</span> F4() {  printf(<span class="string">&quot;F4\n&quot;</span>); }

<span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])
{
    __TRY
    {
        F1(); GOTO_ON_ERROR
        F3(); GOTO_ON_ERROR
        F4(); GOTO_ON_ERROR
    }
    __EXCEPT
    {
        printf(<span class="string">&quot;__EXCEPT of main %d\n&quot;</span>, EXCEPT_ERROR);
    }
    __EXCEPT_END

    <span class="keyword">return</span> <span class="number">0</span>;
END_LABEL:;
}




</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  