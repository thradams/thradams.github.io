
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
 <title>Thiago's website</title> 
 <link href="trastyle.css" type="text/css" rel="stylesheet"/>    
 <link rel="alternate" type="application/rss+xml" title="RSS" href="http://wwww.thradams/codeblog/rss.xml" /> 
</head> 
 <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script> 

 <script type="text/javascript"> try {var pageTracker = _gat._getTracker("UA-9617326-1");pageTracker._trackPageview();} catch(err) {}</script> 
 <body>     <div  class="pageheader">

 <h2>Thiago R. Adams website</h2> <p>     
 
 <a class="linkbox" href="index.htm">HOME</a>     
 <a class="linkbox" href="codeblog.htm">CODE-BLOG</a>
 <a class="linkbox" href="about.htm">ABOUT</a>     
 <br /> </p> </div>
 
 <article>

 <!-- Page content begin --> 


<p>Performance test realloc X free+malloc</p>

<pre>


<span class="keyword">#include</span> &lt;stdio.h&gt;
<span class="keyword">#include</span> &lt;stdlib.h&gt;
<span class="keyword">#include</span> &lt;time.h&gt;
<span class="keyword">#include</span> &lt;<span class="keyword2">string</span>.h&gt;


<span class="keyword">#define</span> USE_REALLOC <span class="number">0</span>

<span class="keyword">#define</span> STRING_COUNT <span class="number">100000</span>
<span class="keyword">#define</span> CHANGES_COUNT <span class="number">60</span>
<span class="keyword">#define</span> STRSIZE <span class="number">5000</span>

<span class="keyword">#define</span> FREE_MALLOC_EXTRA_COPY <span class="number">0</span>

<span class="keyword">int</span> main()
{
  srand(<span class="number">123456</span>);

  printf(<span class="string">&quot;initializing %d strings size between 1 and %d ...\n&quot;</span>, STRING_COUNT, STRSIZE + <span class="number">1</span>);
  <span class="keyword">char</span>** strarray = malloc(<span class="keyword">sizeof</span>(<span class="keyword">char</span>*) * STRING_COUNT);
  <span class="keyword">int</span>* strsize = malloc(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * STRING_COUNT);


  <span class="keyword">int</span> newalloc = <span class="number">0</span>;
  <span class="keyword">int</span> samealloc = <span class="number">0</span>;
  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; STRING_COUNT; i++)
  {
    size_t len = <span class="number">1</span> + rand() % STRSIZE;
    strsize[i] = len;
    strarray[i] = malloc(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * len + <span class="number">1</span>);
    memset(strarray[i], <span class="string">'X'</span>, len);
    strarray[i][len] = <span class="number">0</span>;

    <span class="comment">//printf(&quot;%s\n&quot;, strarray[i]);
</span>  }

  

  time_t start = clock();
  printf(<span class="string">&quot;changing %d strings %d times each ... \n&quot;</span>, STRING_COUNT, CHANGES_COUNT);

  <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; CHANGES_COUNT; k++)
  {
    <span class="keyword">for</span> (<span class="keyword">int</span> i = STRING_COUNT - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)
    {
      <span class="comment">//printf(&quot;before %s\n&quot;, strarray[i]);
</span>
      size_t len = k + rand() % <span class="number">50</span>;
      <span class="keyword">char</span>* p = <span class="number">0</span>;
<span class="keyword">#if</span> USE_REALLOC
      p = realloc(strarray[i], <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * len + <span class="number">1</span>);
<span class="keyword">#else</span>
      p = malloc(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * len + <span class="number">1</span>);
<span class="keyword">#if</span> FREE_MALLOC_EXTRA_COPY
      strncpy(p, strarray[i], len &lt; strsize[i] ? len : strsize[i]);
      free(strarray[i]);
<span class="keyword">#endif</span>
<span class="keyword">#endif</span>

      <span class="keyword">if</span> (p != strarray[i])
        newalloc++;
      <span class="keyword">else</span>
        samealloc++;

      strsize[i] = len;
      strarray[i] = p;
      strarray[i][len] = <span class="number">0</span>;
      memset(strarray[i], <span class="string">'Y'</span>, len);

      <span class="comment">//printf(&quot;after %s\n&quot;, strarray[i]);
</span>    }
  }

  <span class="keyword">const</span> <span class="keyword">char</span>* method = USE_REALLOC ? <span class="string">&quot;realloc&quot;</span> : FREE_MALLOC_EXTRA_COPY ? <span class="string">&quot;free+malloc+copy&quot;</span> : <span class="string">&quot;free+malloc&quot;</span>;

  printf(<span class="string">&quot;using %s took %d\n&quot;</span>,   method, (<span class="keyword">int</span>)(clock() - start));
  printf(<span class="string">&quot;new %d; same %d\n&quot;</span>, newalloc, samealloc);

}
</pre>


<pre>
initializing <span class="number">100000</span> strings size between <span class="number">1</span> <span class="keyword">and</span> <span class="number">5001</span> ...
changing <span class="number">100000</span> strings <span class="number">60</span> times each ...
<span class="keyword">using</span> free+malloc took <span class="number">551</span>
<span class="keyword">new</span> <span class="number">6000000</span>; same <span class="number">0</span>

initializing <span class="number">100000</span> strings size between <span class="number">1</span> <span class="keyword">and</span> <span class="number">5001</span> ...
changing <span class="number">100000</span> strings <span class="number">60</span> times each ...
<span class="keyword">using</span> free+malloc+copy took <span class="number">773</span>
<span class="keyword">new</span> <span class="number">6000000</span>; same <span class="number">0</span>

initializing <span class="number">100000</span> strings size between <span class="number">1</span> <span class="keyword">and</span> <span class="number">5001</span> ...
changing <span class="number">100000</span> strings <span class="number">60</span> times each ...
<span class="keyword">using</span> realloc took <span class="number">1007</span>
<span class="keyword">new</span> <span class="number">5374303</span>; same <span class="number">625697</span>


</pre>


<!-- Page content end --> 
</article> 
 
</body> 
</html>  